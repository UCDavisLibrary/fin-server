
version: '2'

###
# Dev
###
services:
  
  ###
  # Font End NodeJS Application Server & Proxy
  ###
  server:
    build: ../../server
    volumes:
      - ../../server:/app
      - ../../services/frames:/etc/fin/frames
      - ../../services/default-services.js:/etc/fin/default-services.js
      - ../../server/backups:/fcrepo-backups
    ports:
      - 3000:3001
      - 9229:9229
    command: tail -f /dev/null
    # command: node app
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - FIN_URL=${FIN_URL}
      - FIN_ENV=dev
      - FIN_ALLOW_ORIGINS=localhost:8081
    depends_on:
      - fcrepo
      - redis
      - elasticsearch

  # postgres:
  #   image: postgres:9
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - pg-data:/var/lib/postgresql/data

  ###
  # Fedora Repository
  ###
  fcrepo:
    build: ../../fcrepo
    volumes:
      - fedora-data:/var/lib/jetty/fedora-data
      - ../../server/backups:/var/lib/jetty/fcrepo-backups
    ports:
      - 8080:8080
      - 61613:61613
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_VERBOSE=${JWT_VERBOSE}
      - FIN_URL=${FIN_URL}

  ###
  # Search
  ###
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.4.1
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # mem_limit: 1g
    # for docker-compose version 3
    # deploy:
    #   resources:
    #     limits:
    #       memory: 1g
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - ../elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
    depends_on:
      - fcrepo
  
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:5.4.1
  #   depends_on:
  #     - elasticsearch
  #   # volumes: 
  #   #   - ../kibana.yml:/usr/share/kibana/config/kibana.yml
  #   environment:
  #     ELASTICSEARCH_URL: http://elasticsearch:9200
  #   ports:
  #     - 5601:5601
  #   command: bash -c 'sleep 30 && /usr/local/bin/kibana-docker'
  
  ###
  # Session, local user and role store
  ###
  redis:
    image: redis:3.2
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379

  ###
  # Trusted Proxy for Services
  ###
  trustedproxy:
    image: node:8.5
    volumes:
      - ../../services/trusted-proxy:/service
    depends_on:
      - fcrepo
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_TTL=${JWT_TTL}
    command: node service

  ###
  # API Extension Services
  ###
  loris:
    build: ../../services/loris
    volumes:
      - loris-data:/usr/local/share/images/loris
      - ../../services/loris/loris2.conf:/opt/loris/etc/loris2.conf
      - ../../services/loris/start.py:/opt/loris/loris/start.py
    depends_on:
      - fcrepo

  # apixdemo:
  #   build: ../../apix-demo
  #   depends_on:
  #     - fcrepo
  
  ###
  # Services
  ###
  essync:
    image: node:8.5
    volumes:
      - ../../services/essync:/service
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - FIN_URL=${FIN_URL}
    depends_on:
      - server
    command: node service
    # command: bash -c 'tail -f /dev/null'

  auto-generator-demo:
    image: node:8.5
    volumes:
      - ../../services/auto-generator-demo:/service
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - FIN_URL=${FIN_URL}
    depends_on:
      - server
    command: node service

  cas:
    image: node:8
    volumes:
      - ../../services/cas:/service
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - FIN_URL=${FIN_URL}
    depends_on:
      - server
    command: node service

  ucd-lib-client:
    image: node:8
    volumes:
      - ../../services/ucd-lib-client:/service
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - FIN_URL=${FIN_URL}
    depends_on:
      - server
    command: node service
    # command: bash -c 'tail -f /dev/null'

  basic-auth:
    image: node:8
    volumes:
      - ../../services/basic-auth:/service
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - FIN_URL=${FIN_URL}
    depends_on:
      - server
    command: node service

  # karafservices:
  #   build: ../../karafservices
  #   environment:
  #     - JWT_SECRET=${JWT_SECRET}
  #     - JWT_ISSUER=${JWT_ISSUER}
  #     - JWT_TTL=${JWT_TTL}
  #   extra_hosts:
  #     - "${FIN_HOST}:127.0.0.1"
  #   ports:
  #     - 1099:1099
  #     - 8101:8101 
  #     - 44444:44444
  #   volumes:
  #     - fedora-serialized-data:/data

volumes:
  fedora-data:
    driver: local
  es-data:
    driver: local
  redis-data:
    driver: local
  loris-data:
    driver: local
  pg-data:
    driver: local